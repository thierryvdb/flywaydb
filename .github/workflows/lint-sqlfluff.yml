name: SQL-LINT

on:
  #pull_request:
  workflow_dispatch:  

jobs:
  lint-check:
    name: SQLFluff - LINT
    runs-on: production
    steps:
      - name: Checkout this wonderfull project
        uses: actions/checkout@v4
      - name: Let's get sqlfluff in action 
        uses: thierry-p-broucke-alpt/action-sqlfluff@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          sqlfluff_version: "3.1.0"
          sqlfluff_command: "lint"
          config: '.sqlfluff'
          paths: '${{ github.event.repository.name }}/${{ env.SQLLOCATION }}'
          level: warning
          dialect: ${{ env.DIALECT }}
        env: 
          DIALECT: ${{ vars.DIALECT }}
          SQLLOCATION: ${{ vars.SQLLOCATION }}
          USING_PODMAN: true
          PODMAN_SOCKET: /run/podman/podman.sock

      - name: Check if sqlfluff-lint.json exists
        id: check_file
        run: |
          if test -f "sqlfluff-lint.json"; then
            echo "file_exists=true" >> $GITHUB_ENV
          else
            echo "file_exists=false" >> $GITHUB_ENV
          fi
      - name: Agradecimentos
        id: agradecimento
        run: |
          echo "Ola üáµüáπ, tenho noticias!" >> $GITHUB_STEP_SUMMARY
      - name: Generate Report
        if: env.file_exists == 'true'
        run: |
          echo ":warning: A action finalizou, por√©m, encontrei corre√ß√µes necess√°rias nos arquivos abaixo:" >> $GITHUB_STEP_SUMMARY
          # Para vers√£o 3.0.3 +
          jq -r '.[] | .filepath as $filepath | .violations[] | "\($filepath) \(.start_line_no) \(.start_line_pos) \(.description)"' sqlfluff-lint.json | awk 'BEGIN {print "<table><tr><td>:gift: <b>Arquivo</td><td>:hammer: <b>N√∫mero da Linha</td><td>:bomb: <b>Posi√ß√£o</td><td>:page_facing_up: <b>Descri√ß√£o</td></tr>"} {printf "<tr><td>%s</td><td>%s</td><td>%s</td><td>", $1, $2, $3; for (i=4; i<=NF; i++) printf "%s ", $i; print "</td></tr>"} END {print "</table>"}' >> $GITHUB_STEP_SUMMARY
          echo "## Informa√ß√£o adicional" >> $GITHUB_STEP_SUMMARY
          if [ "${{ vars.DIALECT }}" = "mysql" ]; then 
            echo "- Dialeto selecionado foi o üê¨ ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          elif [ "${{ vars.DIALECT }}" = "postgresql" ]; then 
            echo "- Dialeto selecionado foi o üêò ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          elif [ "${{ vars.DIALECT }}" = "oracle" ]; then 
            echo "- Dialeto selecionado foi o ‚≠ï ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          elif [ "${{ vars.DIALECT }}" = "sqlserver" ]; then 
            echo "- Dialeto selecionado foi o ü™ü ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          else
            echo "- Dialeto selecionado foi o ‚ùì ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "- Diret√≥rio pesquisado : ${{ vars.SQLLOCATION }} " >> $GITHUB_STEP_SUMMARY


      - name: Generate Report - When File Does Not Exist
        if: env.file_exists == 'false'
        run: |
          echo ":information_source: N√£o foram encontrados corre√ß√µes necess√°rias." >> $GITHUB_STEP_SUMMARY
          echo "## Informa√ß√£o adicional" >> $GITHUB_STEP_SUMMARY
          if [ "${{ vars.DIALECT }}" = "mysql" ]; then 
            echo "- Dialeto selecionado foi o üê¨ ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          elif [ "${{ vars.DIALECT }}" = "postgresql" ]; then 
            echo "- Dialeto selecionado foi o üêò ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          elif [ "${{ vars.DIALECT }}" = "oracle" ]; then 
            echo "- Dialeto selecionado foi o ‚≠ï ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          elif [ "${{ vars.DIALECT }}" = "sqlserver" ]; then 
            echo "- Dialeto selecionado foi o ü™ü ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          else
            echo "- Dialeto selecionado foi o ‚ùì ${{ vars.DIALECT }} " >> $GITHUB_STEP_SUMMARY
          fi
          echo "- Diret√≥rio pesquisado : ${{ vars.SQLLOCATION }} " >> $GITHUB_STEP_SUMMARY
          